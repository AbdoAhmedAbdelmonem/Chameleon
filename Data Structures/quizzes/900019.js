const question = [
    {
        numb: 1,
        type: "Multiple Choices",
        question: "Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?",
        options: ["G has a vertex with no incoming edge", "G has a vertex with no outgoing edge", "G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge", "Both A & B"],
        answer: "Both A & B"
    },
    {
        numb: 2,
        type: "Multiple Choices",
        question: "Mergesort works by splitting a list of n numbers in half, sorting each half recursively, and merging the two halves. Which of the following data structures will allow mergesort to work in O(n log(n)) time?",
        options: ["A singly linked list", "A doubly linked list", "An array", "All of the above"],
        answer: "All of the above"
    },
    {
        numb: 3,
        type: "Multiple Choices",
        question: "Consider the 3 data structures for a set of n distinct integers shown below. For which of these data structures is the number of steps needed to find and remove the 7th largest element O(log n) in the worst case?",
        options: ["I only", "III only", "I & II", "II & III"],
        answer: "II & III"
    },
    {
        numb: 4,
        type: "Multiple Choices",
        question: "Which of the following traversal techniques lists the nodes of a binary search tree in ascending order?",
        options: ["Post-order traverse", "In-order traverse", "Pre-order traverse", "None of the above"],
        answer: "In-order traverse"
    },
    {
        numb: 5,
        type: "Multiple Choices",
        question: "The concept of the Big O notation is important because:",
        options: ["It can be used to decide the best algorithm that solves a given problem", "It determines the maximum size of a problem that can be solved in a given system in amount of time", "It is the lower bound of the growth rate of the algorithm", "All of the above"],
        answer: "It can be used to decide the best algorithm that solves a given problem"
    },
    {
        numb: 6,
        type: "Multiple Choices",
        question: "Which of the following algorithm design techniques is used in the quick sort algorithm?",
        options: ["Dynamic Programming", "Backtracking", "Divide and Conquer", "Greedy Method"],
        answer: "Divide and Conquer"
    },
    {
        numb: 7,
        type: "Multiple Choices",
        question: "Which of the following is true?",
        options: ["The pop operation on a stack is considerably simpler than the remove operation on a queue", "The contents of a queue can wrap around, while those of a stack cannot", "The top of a stack corresponds to the front of a queue", "None of the above"],
        answer: "The contents of a queue can wrap around, while those of a stack cannot"
    },
    {
        numb: 8,
        type: "Multiple Choices",
        question: "The postfix expression for the infix expression A + B * (C + D) / F + D * E is:",
        options: ["AB + CD + * F / D + E *", "ABCD + * F / + DE * +", "A * B + CD / F * DE + +", "A + * BCD / F * DE + +"],
        answer: "ABCD + * F / + DE * +"
    },
    {numb: 9,
        type: "Multiple Choices",
        question: "Which of the following uses FIFO method?",
        options: ["Queue", "Stack", "Binary Search Tree", "All of the above"],
        answer: "Queue"
    },
    {numb: 10,
        type: "Multiple Choices",
        question: "A circular linked list can be used for:",
        options: ["Stack", "Queue", "Both Stack & Queue", "Neither Stack nor Queue"],
        answer: "Both Stack & Queue"
    },
    {numb: 11,
        type: "Multiple Choices",
        question: "Binary search tree has best case run-time complexity of O(log n). What is the worst case?",
        options: ["O(n^2)", "O(n)", "O(n log n)", "None of the above"],
        answer: "O(n)"
    },
    {numb: 12,
        type: "Multiple Choices",
        question: "An algorithm is:",
        options: ["A step by step procedure to solve a problem", "A piece of code to be executed", "A loosely written code to make final code", "All of the above"],
        answer: "A step by step procedure to solve a problem"
    },
    {numb: 13,
        type: "Multiple Choices",
        question: "The complexity to merge two sorted lists of size m and n is:",
        options: ["O(m / n)", "O(m log n)", "O(m + n)", "None of the above"],
        answer: "O(m + n)"
    },
    {numb: 14,
        type: "Multiple Choices",
        question: "A queue data structure can be used for:",
        options: ["Expression parsing", "Resource allocation", "Recursion", "All of the above"],
        answer: "Resource allocation"
    },
    {numb: 15,
        type: "Multiple Choices",
        question: "Which of the following algorithms cannot be designed without recursion?",
        options: ["Tower of Hanoi", "Fibonacci Series", "Tree Traversal", "None of the above"],
        answer: "None of the above"
    },
    {numb: 16,
        type: "Multiple Choices",
        question: "Static Circular Queues are characterized by which of the following features?",
        options: ["It is a constrained version from a single dimension array", "Limited to a predefined max queue size parameter", "Must leave one empty location to work correctly", "All of the above"],
        answer: "It is a constrained version from a single dimension array"
    },
    {numb: 17,
        type: "Multiple Choices",
        question: "Which of the following array elements are not heap?",
        options: ["15 10 14 8 6 12 13 1 2 5 3 9 7 11 4", "15 12 14 11 13 9 8 7 6 5 4 1 10 2 3", "15 14 10 13 12 6 8 4 11 7 9 3 5 2 1", "15 14 13 11 12 10 8 9 3 7 5 6 4 2 1"],
        answer: "15 12 14 11 13 9 8 7 6 5 4 1 10 2 3"
    },
    {numb: 18,
        type: "Multiple Choices",
        question: "If the pivot for the Quick Sort algorithm is selected to be the largest element in every iteration, then the complexity is:",
        options: ["O(n log(n))", "O(n log(n)) <= QS <= O(n^2)", "O(n^2 log(n))", "None of the above"],
        answer: "None of the above"
    },
    {numb: 19,
        type: "Multiple Choices",
        question: "The complexity of the Heap Sort (HS) algorithm is:",
        options: ["O(n^2)", "O(n log(n)) <= HS <= O(n^2)", "O(n log(n))", "None of the above"],
        answer: "O(n log(n))"
    },
    {numb: 20,
        type: "Multiple Choices",
        question: "Which of the following applications may use a stack?",
        options: ["A parentheses balancing program", "Functions call and return", "Compiler Syntax Analyzer", "All of the above"],
        answer: "All of the above"
    },
    {numb: 21,
        type: "Multiple Choices",
        question: "Depth First Search is equivalent to which of the traversal in the Binary Trees?",
        options: ["Pre-order Traversal", "Post-order Traversal", "In-order Traversal", "None of the above"],
        answer: "Pre-order Traversal"
    },
    {numb: 22,
        type: "Multiple Choices",
        question: "Time Complexity of Depth First Search (DFS) is? (V = number of vertices, E = number of edges)",
        options: ["O(V + E)", "O(V)", "O(E)", "None of the above"],
        answer: "O(V + E)"
    },
    {numb: 23,
        type: "Multiple Choices",
        question: "The Data structure used in standard implementation of Depth First Search is?",
        options: ["Stack", "Queue", "Linked List", "None of the above"],
        answer: "Stack"
    },
    {numb: 24,
        type: "Multiple Choices",
        question: "The Depth First Search (DFS) traversal of a graph will result into?",
        options: ["Linked List", "Tree", "Graph with back edges", "None of the above"],
        answer: "Tree"
    },
    {numb: 25,
        type: "Multiple Choices",
        question: "What can be the applications of Depth First Search?",
        options: ["For generating topological sort of a graph", "For generating Strongly Connected Components of a directed graph", "Detecting cycles in the graph", "All of the above"],
        answer: "All of the above"
    },
    {numb: 26,
        type: "Multiple Choices",
        question: "When the Depth First Search of a graph is unique?",
        options: ["When the graph is a Binary Tree", "When the graph is a Linked List", "When the graph is a n-ary Tree", "None of the above"],
        answer: "When the graph is a Linked List"
    },
    {numb: 27,
        type: "Multiple Choices",
        question: "Regarding implementation of Depth First Search using stacks, what is the maximum distance between two nodes present in the stack? (considering each edge length 1)",
        options: ["Can be anything", "0", "At most 1", "Insufficient Information"],
        answer: "Can be anything"
    },
    {numb: 28,
        type: "Multiple Choices",
        question: "In Depth First Search, how many times a node is visited?",
        options: ["Once", "Twice", "Equivalent to number of indegree of the node", "None of the above"],
        answer: "Equivalent to number of indegree of the node"
    },
    {numb: 29,
        type: "Multiple Choices",
        question: "Breadth First Search is equivalent to which of the traversal in the Binary Trees?",
        options: ["Pre-order Traversal", "Post-order Traversal", "Level-order Traversal", "In-order Traversal"],
        answer: "Level-order Traversal"
    },
    {numb: 30,
        type: "Multiple Choices",
        question: "Time Complexity of Breadth First Search is? (V = number of vertices, E = number of edges)",
        options: ["O(V + E)", "O(V)", "O(E)", "None of the above"],
        answer: "O(V + E)"
    },
    {numb: 31,
        type: "Multiple Choices",
        question: "The Data structure used in standard implementation of Breadth First Search is?",
        options: ["Stack", "Queue", "Linked List", "None of the above"],
        answer: "Queue"
    },
    {numb: 32,
        type: "Multiple Choices",
        question: "The Breadth First Search traversal of a graph will result into?",
        options: ["Linked List", "Tree", "Graph with back edges", "All of the above"],
        answer: "Tree"
    },
    {numb: 33,
        type: "Multiple Choices",
        question: "A person wants to visit some places. He starts from a vertex and then wants to visit every place connected to this vertex and so on. What algorithm he should use?",
        options: ["Depth First Search", "Breadth First Search", "Prim's Algorithm", "None of the above"],
        answer: "Breadth First Search"
    },
    {numb: 34,
        type: "Multiple Choices",
        question: "What can be the applications of Breadth First Search?",
        options: ["Finding shortest path between two nodes", "Finding bipartiteness of a graph", "GPS navigation system", "All of the above"],
        answer: "All of the above"
    },
    {numb: 35,
        type: "Multiple Choices",
        question: "When the Breadth First Search of a graph is unique?",
        options: ["When the graph is a Binary Tree", "When the graph is a Linked List", "When the graph is a n-ary Tree", "None of the above"],
        answer: "When the graph is a Linked List"
    },
    {numb: 36,
        type: "Multiple Choices",
        question: "Regarding implementation of Breadth First Search using queues, what is the maximum distance between two nodes present in the queue? (considering each edge length 1)",
        options: ["Can be anything", "0", "At most 1", "Insufficient Information"],
        answer: "At most 1"
    },
    {numb: 37,
        type: "Multiple Choices",
        question: "In BFS, how many times a node is visited?",
        options: ["Once", "Twice", "Equivalent to number of indegree of the node", "None of the above"],
        answer: "Equivalent to number of indegree of the node"
    },
    {numb: 38,
        type: "Multiple Choices",
        question: "A certain algorithm A has been shown to have running time O(n^2.5), where n is the size of the input. Which of the following is NOT true about algorithm A?",
        options: ["For all N, there may be some inputs for which the running time is less than n^2.6 seconds", "For all N, there may be some inputs for which the running time is less than n^2.4 seconds", "For all N, there may be some inputs for which the running time is more than n^2.6 seconds", "For all N, there may be some inputs for which the running time is more than n^2.4 seconds"],
        answer: "For all N, there may be some inputs for which the running time is more than n^2.6 seconds"
    },
    {numb: 39,
        type: "Multiple Choices",
        question: "For Tree_X and Tree_Y shown below, which traversals will produce the same sequence of node names?",
        options: ["Preorder, Postorder", "Postorder, Inorder", "Postorder, Postorder", "Postorder, Preorder"],
        answer: "Postorder, Inorder"
    },
    {numb: 40,
        type: "Multiple Choices",
        question: "Consider the following sorting algorithms, which has a running time that is dependent on the initial ordering of the input?",
        options: ["Quick Sort", "Merge Sort", "Bubble Sort", "All of the above"],
        answer: "All of the above"
    },
    {numb: 41,
        type: "Multiple Choices",
        question: "Consider the code given below, which of the following best describes the complexity of f(x) as a function of x?",
        options: ["Exponential", "Linear", "Logarithmic", "Quadratic"],
        answer: "Exponential"
    },
    {numb: 42,
        type: "Multiple Choices",
        question: "Let G = (V, E) be a connected, undirected graph, and let a and b be two distinct vertices in V. Let P1 be the problem of finding a shortest simple path between a and b, and let P2 be the problem of finding a longest simple path between a and b. Which of the following statements about P1 and P2 is true?",
        options: ["Both P1 and P2 can be solved in polynomial time", "P1 can be solved in polynomial time but P2 is not known to be solvable in polynomial time", "P1 not known to be solvable in polynomial time but P2 can be solved in polynomial time", "None of the above"],
        answer: "P1 can be solved in polynomial time but P2 is not known to be solvable in polynomial time"
    },
    {numb: 43,
        type: "Multiple Choices",
        question: "Which of the following arithmetic expressions corresponds to the parse tree given by the below diagram?",
        options: ["2(a + b - c + b)", "2((a + b) - (c + b))", "2(a + b) - 2 (c + b)", "None of the above"],
        answer: "2((a + b) - (c + b))"
    },
    {numb: 44,
        type: "Multiple Choices",
        question: "The binary tree below can be used to store a sorted list so that an inorder tree walk generates the list in order. If the new entry K is to be made in such a way that alphabetical order is preserved, where should it be inserted?",
        options: ["As left child of L", "As left child of N", "As right child of H", "As right child of R"],
        answer: "As left child of L"
    },
    {
        numb: 45,
        type: "Multiple Choices",
        question: "If the binary tree T shown below is a Binary Search Tree (BST), which of the following nodes contains the fourth smallest element in T?",
        options: ["The Q node", "The V node", "The W node", "The X node"],
        answer: "The W node",
        image:"../../../MDA/question 50-51 f1.png",
    },
    {
        numb: 46,
        type: "Multiple Choices",
        question: "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:",
        options: ["Range search: Given values a and b, find all the records whose key value is in the range a, b", "Counting distinct values: Given a set of n keys, determine the number of distinct key values", "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary", "Symbol table lookup: Given a program identifier, find its type and address"],
        answer: "Range search: Given values a and b, find all the records whose key value is in the range a, b",
    },
    {
        numb: 47,
        type: "Multiple Choices",
        question: "Which of the following is true concerning the complexity of the bubble sort, the quick sort, and the heap sort?",
        options: ["All can achieve O(n log(n)) generally", "All have O(n^2) worst case", "Only the bubble sort can achieve O(n) if the list is already sorted", "Only the heap sort can achieve O(n) if the list is already sorted"],
        answer: "Only the bubble sort can achieve O(n) if the list is already sorted"
    },
    {
        numb: 48,
        type: "Multiple Choices",
        question: "If the binary tree T shown below is a Binary Search Tree (BST), which of the following nodes contains the fourth smallest element in T?",
        options: ["The Q node", "The V node", "The W node", "The X node"],
        answer: "The W node",
        image:"../../../MDA/question 50-51 f1.png",
    },
    {
        numb: 49,
        type: "Multiple Choices",
        question: "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:",
        options: ["Range search: Given values a and b, find all the records whose key value is in the range a, b", "Counting distinct values: Given a set of n keys, determine the number of distinct key values", "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary", "Symbol table lookup: Given a program identifier, find its type and address"],
        answer: "Range search: Given values a and b, find all the records whose key value is in the range a, b",
    },
    {
        numb: 50,
        type: "Multiple Choices",
        question: "Are you Satisfied From the new update? (Remember the democratically of Levi :) )",
        options: ["Yes Sure!","Not at all","Never","Maybe"],
        answer: "Yes Sure!",
    },
];
